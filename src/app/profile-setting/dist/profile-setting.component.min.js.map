{"version":3,"sources":["profile-setting.component.ts"],"names":["core_1","require","person_module_1","GetImage_module_1","AddImge_module_1","ProfileSettingComponent","http","router","authService","jwtHelper","this","person","Person","image","AddImage","updatedPerson","getImage","GetImage","prototype","ngOnInit","PersonData","_this","GetUser","subscribe","result","error","console","log","UpdatePerson","UpdateUser","response","localStorage","setItem","token","decodedToken","decodeToken","navigate","onImageSelected","event","imageUrl","target","files","UpdateImage","imageSrc","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBACAC,gBAAAD,QAAA,mCAKAE,kBAAAF,QAAA,8BACAG,iBAAAH,QAAA,6BAMAI,wBAAA,WAME,SAAAA,EAAoBC,EAA2BC,EAAwBC,EAAyCC,GAA5FC,KAAAJ,KAAAA,EAA2BI,KAAAH,OAAAA,EAAwBG,KAAAF,YAAAA,EAAyCE,KAAAD,UAAAA,EALhHC,KAAAC,OAAiB,IAAIT,gBAAAU,OACjBF,KAAAG,MAAkB,IAAIT,iBAAAU,SAC1BJ,KAAAK,cAAwB,IAAIb,gBAAAU,OAC5BF,KAAAM,SAAqB,IAAIb,kBAAAc,SA+E3B,OA5EIZ,EAAAa,UAAAC,SAAA,WACET,KAAKU,aACLV,KAAKO,YAGRZ,EAAAa,UAAAE,WAAA,WAAA,IAAAC,EAAAX,KACDA,KAAKF,YAAYc,UAAUC,UACzB,SAACC,GACCH,EAAKV,OAASa,GAEhB,SAACC,GACCC,QAAQC,IAAIF,MAKZpB,EAAAa,UAAAU,aAAA,WAAA,IAAAP,EAAAX,KACFA,KAAKF,YAAYqB,WAAWnB,KAAKK,eAAeQ,UAChD,SAACO,GACGJ,QAAQC,IAAI,gCACZN,EAAKD,aACPW,aAAaC,QAAQ,gBAAiBF,EAASG,OAG/C,IAAMC,EAAeb,EAAKZ,UAAU0B,YAAYL,EAASG,OAGzDF,aAAaC,QAAQ,OAAQE,EAAa,+DAC1CH,aAAaC,QAAQ,SAAUE,EAAa,yEAC5Cb,EAAKd,OAAO6B,SAAS,CAAC,WAItB,SAACX,GACCC,QAAQC,IAAIF,GACdC,QAAQC,IAAI,aAAaF,MAOzBpB,EAAAa,UAAAmB,gBAAA,SAAgBC,GAClB5B,KAAKG,MAAM0B,SAAWD,EAAME,OAAOC,MAAM,GACzC/B,KAAKI,YAEHT,EAAAa,UAAAJ,SAAA,WAAA,IAAAO,EAAAX,KACFA,KAAKF,YAAYkC,YAAYhC,KAAKG,OAAOU,UACzC,WACIG,QAAQC,IAAI,gCACZN,EAAKJ,YAIP,SAACQ,GACCC,QAAQC,IAAIF,GACdC,QAAQC,IAAI,aAAaF,MAM1BpB,EAAAa,UAAAD,SAAA,WAAA,IAAAI,EAAAX,KACHA,KAAKF,YAAYS,WAAWM,UAC1B,SAACC,GACCH,EAAKL,SAAWQ,EACfH,EAAKsB,SAAW,0BAA0BtB,EAAKL,SAASuB,UAE3D,SAACd,GACCC,QAAQC,IAAIF,MA5ELpB,EAAuBuC,WAAA,CALnC5C,OAAA6C,UAAU,CACTC,SAAU,sBACVC,YAAa,mCACbC,UAAW,CAAC,sCAED3C,GAAb,GAAa4C,QAAA5C,wBAAAA","file":"profile-setting.component.min.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Person } from '../modules/person/person.module';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthServicesService } from '../services/auth-services.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { GetImage } from '../modules/GetImage.module';\nimport { AddImage } from '../modules/AddImge.module';\n@Component({\n  selector: 'app-profile-setting',\n  templateUrl: './profile-setting.component.html',\n  styleUrls: ['./profile-setting.component.css']\n})\nexport class ProfileSettingComponent {\n  person: Person = new Person();\n      image: AddImage = new AddImage();\n  updatedPerson: Person = new Person();\n  getImage: GetImage = new GetImage();\n    public imageSrc: string | undefined;\n  constructor(private http: HttpClient,  private router: Router, private authService:AuthServicesService, private jwtHelper: JwtHelperService) { }\n    ngOnInit(): void {\n      this.PersonData();\n      this.GetImage();\n  }\n  \n   PersonData() {\n  this.authService.GetUser().subscribe(\n    (result: any) => {\n      this.person = result;\n    },\n    (error: any) => {\n      console.log(error);\n    }\n  );\n}\n\n      UpdatePerson():void {\n    this.authService.UpdateUser(this.updatedPerson).subscribe(\n    (response: any) => {\n        console.log(`Image  updated successfully.`);\n        this.PersonData();\n      localStorage.setItem('Authorization', response.token);\n\n      // Decode the JWT token to get user information\n      const decodedToken = this.jwtHelper.decodeToken(response.token);\n\n      // Store user information in local storage\n      localStorage.setItem('name', decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"]);\n      localStorage.setItem('userid', decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"]);\n      this.router.navigate(['/home']);\n   \n   \n    },\n      (error: any) => {\n        console.log(error);\n      console.log(`Error  }: ${error}`);\n    }\n  );\n\n    \n      }\n  \n      onImageSelected(event: any) {\n    this.image.imageUrl = event.target.files[0];\n    this.AddImage();\n  }\n      AddImage():void {\n    this.authService.UpdateImage(this.image).subscribe(\n    () => {\n        console.log(`Image  updated successfully.`);\n        this.GetImage();\n   \n   \n    },\n      (error: any) => {\n        console.log(error);\n      console.log(`Error  }: ${error}`);\n    }\n  );\n\n    \n}\n     GetImage() {\n  this.authService.GetImage().subscribe(\n    (result: any) => {\n      this.getImage = result;\n       this.imageSrc = `data:image/jpeg;base64,${this.getImage.imageUrl}`;\n    },\n    (error: any) => {\n      console.log(error);\n    }\n  );\n}\n\n\n\n}\n"]}