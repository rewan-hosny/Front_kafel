{"version":3,"sources":["profile-setting.component.ts"],"names":[],"mappings":"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","file":"profile-setting.component.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Person } from '../modules/person/person.module';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthServicesService } from '../services/auth-services.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { GetImage } from '../modules/GetImage.module';\nimport { AddImage } from '../modules/AddImge.module';\n@Component({\n  selector: 'app-profile-setting',\n  templateUrl: './profile-setting.component.html',\n  styleUrls: ['./profile-setting.component.css']\n})\nexport class ProfileSettingComponent {\n  person: Person = new Person();\n      image: AddImage = new AddImage();\n  updatedPerson: Person = new Person();\n  getImage: GetImage = new GetImage();\n    public imageSrc: string | undefined;\n  constructor(private http: HttpClient,  private router: Router, private authService:AuthServicesService, private jwtHelper: JwtHelperService) { }\n    ngOnInit(): void {\n      this.PersonData();\n      this.GetImage();\n  }\n  \n   PersonData() {\n  this.authService.GetUser().subscribe(\n    (result: any) => {\n      this.person = result;\n    },\n    (error: any) => {\n      console.log(error);\n    }\n  );\n}\n\n      UpdatePerson():void {\n    this.authService.UpdateUser(this.updatedPerson).subscribe(\n    (response: any) => {\n        console.log(`Image  updated successfully.`);\n        this.PersonData();\n      localStorage.setItem('Authorization', response.token);\n\n      // Decode the JWT token to get user information\n      const decodedToken = this.jwtHelper.decodeToken(response.token);\n\n      // Store user information in local storage\n      localStorage.setItem('name', decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"]);\n      localStorage.setItem('userid', decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"]);\n      this.router.navigate(['/home']);\n   \n   \n    },\n      (error: any) => {\n        console.log(error);\n      console.log(`Error  }: ${error}`);\n    }\n  );\n\n    \n      }\n  \n      onImageSelected(event: any) {\n    this.image.imageUrl = event.target.files[0];\n    this.AddImage();\n  }\n      AddImage():void {\n    this.authService.UpdateImage(this.image).subscribe(\n    () => {\n        console.log(`Image  updated successfully.`);\n        this.GetImage();\n   \n   \n    },\n      (error: any) => {\n        console.log(error);\n      console.log(`Error  }: ${error}`);\n    }\n  );\n\n    \n}\n     GetImage() {\n  this.authService.GetImage().subscribe(\n    (result: any) => {\n      this.getImage = result;\n       this.imageSrc = `data:image/jpeg;base64,${this.getImage.imageUrl}`;\n    },\n    (error: any) => {\n      console.log(error);\n    }\n  );\n}\n\n\n\n}\n"]}