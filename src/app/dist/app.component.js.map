{"version":3,"sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA6D;AAW7D;IAIM,sBAAoB,GAAsB,EAAS,aAA4B,EAAS,WAAgC,EAAU,MAAc,EAAU,SAA2B;QAAjK,QAAG,GAAH,GAAG,CAAmB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,cAAS,GAAT,SAAS,CAAkB;QAHzL,UAAK,GAAG,aAAa,CAAC;QACnB,eAAU,GAAY,KAAK,CAAC;IAE+J,CAAC;IAE/L,+BAAQ,GAAR;QAAA,iBAQC;QAPK,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,UAAA,UAAU;YACrD,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAAC,CAAC,CAAC,CAAC;QAClC,IAAM,gBAAgB,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAI5E,CAAC;IACC,6BAAM,GAAN;QACA,4EAA4E;QAC5E,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QACzC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAElC,2DAA2D;QAC3D,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAEpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC/B,CAAC;IA3BU,YAAY;QALxB,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;SACnC,CAAC;OACW,YAAY,CA6BxB;IAAD,mBAAC;CA7BD,AA6BC,IAAA;AA7BY,oCAAY","file":"app.component.js","sourcesContent":["import { ChangeDetectorRef, Component } from '@angular/core';\nimport { AuthServicesService } from './services/auth-services.service';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { SharedService } from './services/shared.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Front_kafel';\n     isLoggedIn: boolean = false;\n   \n      constructor(private cdr: ChangeDetectorRef,private sharedService: SharedService,private authService: AuthServicesService, private router: Router, private jwtHelper: JwtHelperService,) { }\n\n  ngOnInit(): void {\n        this.sharedService.isLoggedIn$.subscribe(isLoggedIn => {\n      this.isLoggedIn = isLoggedIn; });\n     const isLoggedInString = localStorage.getItem(\"isLoggedIn\");\n    this.isLoggedIn = isLoggedInString ? JSON.parse(isLoggedInString) : false;\n        \n\n    \n  }\n    logout(): void {\n    // Clear user information from local storage and navigate back to login page\n    localStorage.removeItem('Authorization');\n    localStorage.removeItem('name');\n    localStorage.removeItem('userid');\n\n    // Set isLoggedIn to false and remove it from local storage\n    this.isLoggedIn = false;\n    localStorage.removeItem('isLoggedIn');\n\n      this.router.navigate(['/login']);\n        this.cdr.detectChanges();\n  }\n\n}\n"]}