{"version":3,"sources":["app.component.ts"],"names":["core_1","require","AppComponent","cdr","sharedService","authService","router","jwtHelper","this","title","isLoggedIn","prototype","ngOnInit","_this","isLoggedIn$","subscribe","isLoggedInString","localStorage","getItem","JSON","parse","logout","removeItem","navigate","detectChanges","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAWAC,aAAA,WAIM,SAAAA,EAAoBC,EAA+BC,EAAqCC,EAA0CC,EAAwBC,GAAtIC,KAAAL,IAAAA,EAA+BK,KAAAJ,cAAAA,EAAqCI,KAAAH,YAAAA,EAA0CG,KAAAF,OAAAA,EAAwBE,KAAAD,UAAAA,EAH9JC,KAAAC,MAAQ,cACLD,KAAAE,YAAsB,EA2B3B,OAvBER,EAAAS,UAAAC,SAAA,WAAA,IAAAC,EAAAL,KACMA,KAAKJ,cAAcU,YAAYC,UAAU,SAAAL,GAC3CG,EAAKH,WAAaA,IACnB,IAAMM,EAAmBC,aAAaC,QAAQ,cAC/CV,KAAKE,aAAaM,GAAmBG,KAAKC,MAAMJ,IAKhDd,EAAAS,UAAAU,OAAA,WAEAJ,aAAaK,WAAW,iBACxBL,aAAaK,WAAW,QACxBL,aAAaK,WAAW,UAGxBd,KAAKE,YAAa,EAClBO,aAAaK,WAAW,cAEtBd,KAAKF,OAAOiB,SAAS,CAAC,WACpBf,KAAKL,IAAIqB,iBA1BJtB,EAAYuB,WAAA,CALxBzB,OAAA0B,UAAU,CACTC,SAAU,WACVC,YAAa,uBACbC,UAAW,CAAC,0BAED3B,GAAb,GAAa4B,QAAA5B,aAAAA","file":"app.component.min.js","sourcesContent":["import { ChangeDetectorRef, Component } from '@angular/core';\nimport { AuthServicesService } from './services/auth-services.service';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { SharedService } from './services/shared.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Front_kafel';\n     isLoggedIn: boolean = false;\n   \n      constructor(private cdr: ChangeDetectorRef,private sharedService: SharedService,private authService: AuthServicesService, private router: Router, private jwtHelper: JwtHelperService,) { }\n\n  ngOnInit(): void {\n        this.sharedService.isLoggedIn$.subscribe(isLoggedIn => {\n      this.isLoggedIn = isLoggedIn; });\n     const isLoggedInString = localStorage.getItem(\"isLoggedIn\");\n    this.isLoggedIn = isLoggedInString ? JSON.parse(isLoggedInString) : false;\n        \n\n    \n  }\n    logout(): void {\n    // Clear user information from local storage and navigate back to login page\n    localStorage.removeItem('Authorization');\n    localStorage.removeItem('name');\n    localStorage.removeItem('userid');\n\n    // Set isLoggedIn to false and remove it from local storage\n    this.isLoggedIn = false;\n    localStorage.removeItem('isLoggedIn');\n\n      this.router.navigate(['/login']);\n        this.cdr.detectChanges();\n  }\n\n}\n"]}