{"version":3,"sources":["register.component.ts"],"names":["core_1","require","person_module_1","RegisterComponent","authService","router","jwtHelper","this","errorMessage","title","newItem","Person","registrationErrors","errorMessages","prototype","register","_this","subscribe","response","console","log","localStorage","setItem","token","decodedToken","decodeToken","registrationResponse","registrationError","navigate","error","errors","Object","keys","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAGAC,gBAAAD,QAAA,mCAiBAE,kBAAA,WAUE,SAAAA,EAAoBC,EAA0CC,EAAwBC,GAAlEC,KAAAH,YAAAA,EAA0CG,KAAAF,OAAAA,EAAwBE,KAAAD,UAAAA,EATtFC,KAAAC,aAAuB,GAGvBD,KAAAE,MAAgB,GAChBF,KAAAG,QAAkB,IAAIR,gBAAAS,OACtBJ,KAAAK,mBAA+B,GAC7BL,KAAAM,cAAqB,GA6CzB,OAvCEV,EAAAW,UAAAC,SAAA,WAAA,IAAAC,EAAAT,KACEA,KAAKH,YAAYW,SAASR,KAAKG,SAASO,UACtC,SAACC,GAECC,QAAQC,IAAIF,GAGZG,aAAaC,QAAQ,gBAAiBJ,EAASK,OAG/C,IAAMC,EAAeR,EAAKV,UAAUmB,YAAYP,EAASK,OAGzDF,aAAaC,QAAQ,OAAQE,EAAa,+DAC1CH,aAAaC,QAAQ,SAAUE,EAAa,yEAI5CR,EAAKU,qBAAuBR,EAC5BF,EAAKW,kBAAoB,KAGzBX,EAAKX,OAAOuB,SAAS,CAAC,WAExB,SAACC,GACCb,EAAKW,kBAAoBE,EACzBb,EAAKP,MAAQoB,EAAMA,MAAMA,MAAMpB,MAC/BO,EAAKH,cAAgBgB,EAAMA,MAAMA,MAAMC,OACvCX,QAAQC,IAAIS,GACPV,QAAQC,IAAIS,EAAMA,OACvBV,QAAQC,IAAKS,EAAMA,MAAMA,MAAMpB,OAC/BU,QAAQC,IAAIS,EAAMA,MAAMA,MAAMC,QACxBX,QAAQC,IAAIS,EAAMX,UACxBC,QAAQC,IAAIW,OAAOC,KAAKH,OA9CnB1B,EAAiB8B,WAAA,CAL7BjC,OAAAkC,UAAU,CACTC,SAAU,eACVC,YAAa,4BACbC,UAAW,CAAC,+BAEDlC,GAAb,GAAamC,QAAAnC,kBAAAA","file":"register.component.min.js","sourcesContent":["import { Component } from '@angular/core';\nimport { AuthServicesService } from '../services/auth-services.service';\n\nimport { Person } from '../modules/person/person.module';\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms'; // Import the FormsModule\nimport { NgModule } from '@angular/core';\nimport { throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  errorMessage: string = '';\n   registrationResponse: any;\n  registrationError: any;\n  title: string = '';\n  newItem: Person = new Person(); // Initialize the 'newItem' with a new instance of 'Person'\n  registrationErrors: string[] = [];\n    errorMessages: any = {}; // Initialize an empty object to store the error messages\n\n\n  constructor(private authService: AuthServicesService, private router: Router, private jwtHelper: JwtHelperService) { }\n\n  // Rename the method to avoid conflicts with the service method\n  register(): void {\n    this.authService.register(this.newItem).subscribe(\n      (response: any) => {\n        // Handle the successful response here\n        console.log(response);\n\n        // Store the JWT token in local storage (as a string)\n        localStorage.setItem('Authorization', response.token);\n\n        // Decode the JWT token to get user information\n        const decodedToken = this.jwtHelper.decodeToken(response.token);\n\n        // Store user information in local storage\n        localStorage.setItem('name', decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"]);\n        localStorage.setItem('userid', decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"]);\n\n  \n\n        this.registrationResponse = response;\n        this.registrationError = null; // Clear any previous error when successful\n\n              // Redirect to the home page\n        this.router.navigate(['/home']);\n      },\n      (error) => {\n        this.registrationError = error;\n        this.title = error.error.error.title;\n        this.errorMessages = error.error.error.errors;\n        console.log(error);\n             console.log(error.error);\n        console.log( error.error.error.title);\n        console.log(error.error.error.errors);\n              console.log(error.response);\n        console.log(Object.keys(error));\n      }\n    );\n  }\n\n\n}\n"]}