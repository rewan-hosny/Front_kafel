{"version":3,"sources":["register.component.ts"],"names":["core_1","require","person_module_1","RegisterComponent","authService","router","jwtHelper","this","newItem","Person","prototype","register","_this","subscribe","response","console","log","localStorage","setItem","token","decodedToken","decodeToken","navigate","error","errors","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAGAC,gBAAAD,QAAA,mCAgBAE,kBAAA,WAGE,SAAAA,EAAoBC,EAA0CC,EAAwBC,GAAlEC,KAAAH,YAAAA,EAA0CG,KAAAF,OAAAA,EAAwBE,KAAAD,UAAAA,EAFvFC,KAAAC,QAAkB,IAAIN,gBAAAO,OAgCvB,OA7BAN,EAAAO,UAAAC,SAAA,WAAA,IAAAC,EAAAL,KACEA,KAAKH,YAAYO,SAASJ,KAAKC,SAASK,UACtC,SAACC,GAECC,QAAQC,IAAIF,GAGZG,aAAaC,QAAQ,gBAAiBJ,EAASK,OAG/C,IAAMC,EAAeR,EAAKN,UAAUe,YAAYP,EAASK,OAGzDF,aAAaC,QAAQ,OAAQE,EAAa,+DAC1CH,aAAaC,QAAQ,SAAUE,EAAa,yEAG5CR,EAAKP,OAAOiB,SAAS,CAAC,WAExB,SAACC,GACCR,QAAQC,IAAIO,GACZR,QAAQC,IAAIO,EAAMA,MAAMC,WAzBjBrB,EAAiBsB,WAAA,CAL7BzB,OAAA0B,UAAU,CACTC,SAAU,eACVC,YAAa,4BACbC,UAAW,CAAC,+BAED1B,GAAb,GAAa2B,QAAA3B,kBAAAA","file":"register.component.min.js","sourcesContent":["import { Component } from '@angular/core';\nimport { AuthServicesService } from '../services/auth-services.service';\n\nimport { Person } from '../modules/person/person.module';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms'; // Import the FormsModule\nimport { NgModule } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n newItem: Person = new Person(); // Initialize the 'newItem' with a new instance of 'Person'\n\n  constructor(private authService: AuthServicesService, private router: Router, private jwtHelper: JwtHelperService,) { }\nregister(): void {\n  this.authService.register(this.newItem).subscribe(\n    (response: any) => {\n      // Handle the successful response here\n      console.log(response);\n\n      // Store the JWT token in local storage (as a string)\n      localStorage.setItem('Authorization', response.token);\n\n      // Decode the JWT token to get user information\n      const decodedToken = this.jwtHelper.decodeToken(response.token);\n\n      // Store user information in local storage\n      localStorage.setItem('name', decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"]);\n      localStorage.setItem('userid', decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"]);\n\n      // Redirect to the home page\n      this.router.navigate(['/home']);\n    },\n    (error: any) => {\n      console.log(error);\n      console.log(error.error.errors); // Log the specific error messages, if available\n      // Handle the error as needed\n    }\n  );\n}\n\n\n\n}\n"]}