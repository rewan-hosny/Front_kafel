{"version":3,"sources":["project-details.component.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA0C;AAM1C,4DAAoD;AAEpD,oEAA4D;AAQ5D;IAOE,iCAAoB,IAAgB,EAAW,MAAc,EAAU,cAAsC,EAAS,YAAiC,EAAW,KAAqB;QAAnK,SAAI,GAAJ,IAAI,CAAY;QAAW,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAwB;QAAS,iBAAY,GAAZ,YAAY,CAAqB;QAAW,UAAK,GAAL,KAAK,CAAgB;QALvL,mBAAc,GAAU,IAAI,wBAAO,EAAE,CAAC;QACnC,YAAO,GAAG,OAAO,CAAC;QACrB,iBAAY,GAAY,EAAE,CAAC;QAC1B,gBAAW,GAAgB,IAAI,gCAAW,EAAE,CAAC,CAAC,4DAA4D;IAEiF,CAAC;IAC7L,0CAAQ,GAAR;QAAA,iBAOC;QANC,mDAAmD;QACnD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;YAChC,KAAI,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,4CAA4C;YAC5E,KAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mDAAiB,GAAjB;QAAA,iBAYD;QAXG,sDAAsD;QACtD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACzD,UAAC,IAAS;YACR,gEAAgE;YAChE,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,wFAAwF;QAC1F,CAAC,EACD,UAAA,KAAK;YACH,yCAAyC;YACzC,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACT,CAAC;IAEC,8CAAY,GAAZ;QAAA,iBAaD;QAZG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACxE;YACI,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;YACjD,KAAI,CAAC,eAAe,EAAE,CAAC;QAE3B,CAAC,EACD,UAAC,KAAU;YACT,OAAO,CAAC,GAAG,CAAC,uBAAqB,KAAO,CAAC,CAAC;QAC5C,CAAC,CACF,CAAC;QAAA,CAAC;IAGL,CAAC;IACC,iDAAe,GAAf;QAAA,iBAYC;QAVC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAClD,UAAC,IAAS;YACR,gEAAgE;YAChE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,wFAAwF;QAC1F,CAAC,EACD,UAAA,KAAK;YACH,yCAAyC;YACzC,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACP,CAAC;IAxDU,uBAAuB;QALnC,gBAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,WAAW,EAAE,kCAAkC;YAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;SAC/C,CAAC;OACW,uBAAuB,CA4DnC;IAAD,8BAAC;CA5DD,AA4DC,IAAA;AA5DY,0DAAuB","file":"project-details.component.js","sourcesContent":["import { Component } from '@angular/core';\nimport { ProjectServicesService } from '../services/project-services.service';\nimport { OfferServicesService } from '../services/offer-services.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '../modules/Project.module';\nimport { Offer } from '../modules/Offers.module';\nimport { CreateOffer } from '../modules/CreateOffer.module';\n\n\n@Component({\n  selector: 'app-project-details',\n  templateUrl: './project-details.component.html',\n  styleUrls: ['./project-details.component.css']\n})\nexport class ProjectDetailsComponent {\n projectId!: number; // Property to store the project ID\n  projectDetails:Project= new Project();\n     console = console;\n  OfferDetails: Offer[] = [];\n   createOffer: CreateOffer = new CreateOffer(); // Initialize createOffer with a new instance of CreateOffer\n\n  constructor(private http: HttpClient,  private router: Router, private projectService: ProjectServicesService,private offerService:OfferServicesService , private route: ActivatedRoute,) { }\n  ngOnInit(): void {\n    // Retrieve the project ID from the route parameter\n    this.route.params.subscribe(params => {\n      this.projectId = +params['id']; // Assuming the route parameter name is 'id'\n      this.getProjectDetails();\n      this.getOfferDetails();\n    });\n  }\n  getProjectDetails() {\n    // Call the GetOneProject function with the project ID\n    this.projectService.GetOneProject(this.projectId).subscribe(\n      (data: any) => {\n        // Handle the response, here 'data' contains the project details\n        this.projectDetails = data;\n        // You can now use 'this.projectDetails' to display the project details on your template\n      },\n      error => {\n        // Handle the error if the API call fails\n        console.error('Error fetching project details:', error);\n      });\n}\n\n  CreateOffers():void {\n    this.offerService.CreateOffer(this.createOffer,this.projectId).subscribe(\n    () => {\n        console.log(`offer item  updated successfully.`);\n        this.getOfferDetails();\n   \n    },\n    (error: any) => {\n      console.log(`Error updating }: ${error}`);\n    }\n  );;\n\n    \n}\n  getOfferDetails(){\n  \n    this.offerService.GetOffer(this.projectId).subscribe(\n      (data: any) => {\n        // Handle the response, here 'data' contains the project details\n        this.OfferDetails = data;\n        // You can now use 'this.projectDetails' to display the project details on your template\n      },\n      error => {\n        // Handle the error if the API call fails\n        console.error('Error fetching project details:', error);\n      });\n  }\n\n\n\n}\n"]}