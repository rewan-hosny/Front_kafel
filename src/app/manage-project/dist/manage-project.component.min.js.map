{"version":3,"sources":["manage-project.component.ts"],"names":["core_1","require","GetImage_module_1","Message_module_1","acceptedOffer_module_1","person_module_1","ManageProjectComponent","http","router","route","authService","offerService","jwtHelper","this","person","Person","message","Message","acceptoffer","AcceptedOffer","getImage","GetImage","messages","prototype","ngOnInit","_this","PersonData","params","subscribe","projectId","GetAcceptedOffer","GetMessages","calculateReceiverId","_d","_c","_b","_a","offers","freelance","id","_e","_j","_h","_g","_f","project","_o","_m","_l","_k","calculateReceiverName","firstName","onFormSubmit","PostMessage","GetUser","result","error","console","log","imageSrc","imageUrl","GetAcceptProject","massege","reciverName","reciverId","PotsMessage","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"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","file":"manage-project.component.min.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServicesService } from '../services/auth-services.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nimport { GetImage } from '../modules/GetImage.module';\nimport { OfferServicesService } from '../services/offer-services.service';\nimport { Message } from '../modules/Message.module';\nimport { ActivatedRoute } from '@angular/router';\nimport { AcceptedOffer } from '../modules/acceptedOffer.module';\nimport { Person } from '../modules/person/person.module';\n\n@Component({\n  selector: 'app-manage-project',\n  templateUrl: './manage-project.component.html',\n  styleUrls: ['./manage-project.component.css']\n})\nexport class ManageProjectComponent {\n  person: Person = new Person();\n  message: Message = new Message();\n  acceptoffer: AcceptedOffer = new AcceptedOffer();\n  getImage: GetImage = new GetImage();\n    messages: Message[] = [];\n    projectId!: number;\n  public imageSrc: string | undefined;\n  constructor(private http: HttpClient, private router: Router,private route: ActivatedRoute, private authService: AuthServicesService, private offerService: OfferServicesService, private jwtHelper: JwtHelperService) { }\n  ngOnInit(): void {\n    this.PersonData();\n    this.GetImage();\n     this.route.params.subscribe(params => {\n    this.projectId = +params['id']; // Assuming the route parameter name is 'id'\n       this.GetAcceptedOffer();\n       this.GetMessages();\n\n   \n  });\n  }\ncalculateReceiverId(): number {\n    if (this.acceptoffer?.offers?.freelance?.person?.id === this.person?.id) {\n      return this.acceptoffer?.offers?.project?.person?.id || 0;\n    } else {\n      return this.acceptoffer?.offers?.freelance?.person?.id || 0;\n    }\n}\n  calculateReceiverName(): string {\n  if (this.acceptoffer?.offers?.freelance?.person?.id === this.person?.id) {\n    return this.acceptoffer?.offers?.project?.person?.firstName || 'Unknown';\n  } else {\n    return this.acceptoffer?.offers?.freelance?.person?.firstName || 'Unknown';\n  }\n}\n\n  onFormSubmit() {\n  this.PostMessage(this.message);\n}\n \n  PersonData() {\n    this.authService.GetUser().subscribe(\n      (result: any) => {\n        this.person = result;\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n  }\n  GetMessages() {\n  this.offerService.GetMessages(this.projectId).subscribe(\n    (result: any) => {\n      this.messages = result;\n \n    },\n    (error: any) => {\n      console.log(error);\n    }\n  );\n   }\n\n  GetImage() {\n    this.authService.GetImage().subscribe(\n      (result: any) => {\n        this.getImage = result;\n        this.imageSrc = `data:image/jpeg;base64,${this.getImage.imageUrl}`;\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n  }\n GetAcceptedOffer() {\n    this.offerService.GetAcceptProject(this.projectId).subscribe(\n      (result: any) => {\n        this.acceptoffer = result;\n  \n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n  }\n\n  PostMessage(message:Message) {\n    message.massege = \"bay \";\n    this.message.reciverName = this.calculateReceiverName();\n     this.message.reciverId = this.calculateReceiverId();\n    this.offerService.PotsMessage(this.message, this.projectId).subscribe(\n      () => {\n        console.log(`message send successfully.`);\n        this.GetMessages();\n   \n      },\n      (error: any) => {\n        console.log(`Error updating }: ${error}`);\n      }\n    );;\n  }\n\n\n\n}"]}