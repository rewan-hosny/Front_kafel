{"version":3,"sources":["offer-services.service.ts"],"names":[],"mappings":"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","file":"offer-services.service.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { CreateOffer } from '../modules/CreateOffer.module';\nimport { Observable } from 'rxjs';\nimport { Message } from '../modules/Message.module';\n\n@Injectable({\n  providedIn: 'root'\n\n})\nexport class OfferServicesService {\n  private Offer = \"Offer/Offers\";\n  private GetCategory = \"Offer/allCategory\";\n  private Accept = \"Offer/AcceptProject\";\n  private PostMessage = \"Message/Message\";\n    private GetFreelance = \"Project/GetFreelance\";\n\n  \n  reciverId: number = 0;\n   massege: string = '';\n  \n    constructor(private http: HttpClient, private jwtHelper: JwtHelperService, private localStorage: LocalStorageService, private router: Router) { }\n\n    GetOffer(id: number) {\n          const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.get(\n     `${environment.apiUrl}/${this.Offer}/${id}`,httpOptions\n    );\n    }\n  \n   GetIfFreelance( ) {\n          const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.get(\n     `${environment.apiUrl}/${this.GetFreelance}`,httpOptions\n    );\n   }\n  \n  \n  CreateOffer(Offer: CreateOffer, id: number): Observable<any> {\n        const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(`${environment.apiUrl}/${this.Offer}/${id}`, Offer,httpOptions);\n  }\n  \n\n    GetAllCategories() {\n\n    return this.http.get(\n     `${environment.apiUrl}/${this.GetCategory}`\n    );\n    }\n  \n  \n  \n      GetAcceptProject(id: number) {\n          const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.get(\n     `${environment.apiUrl}/${this.Accept}/${id}`,httpOptions\n    );\n      }\n  \n  \n     GetMessages(id: number) {\n          const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.get(\n     `${environment.apiUrl}/${this.PostMessage}/${id}`,httpOptions\n    );\n    }\n    AcceptProject(id: number): Observable<any> {\n        const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(`${environment.apiUrl}/${this.Accept}/${id}`, {},httpOptions);\n    }\n  \n   PotsMessage(massege: string,reciverId :number, id: number): Observable<any> {\n        const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(`${environment.apiUrl}/${this.PostMessage}/${id}`, {massege,reciverId},httpOptions);\n  }\n  \n\n\n}\n"]}