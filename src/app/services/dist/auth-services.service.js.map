{"version":3,"sources":["auth-services.service.ts"],"names":[],"mappings":";;;;;;;;AAAA,6CAAkF;AAClF,sCAA2C;AAG3C,4DAA2D;AAO3D,6BAA8C;AAC9C,4CAAiD;AAMjD;IAUE,6BAAoB,IAAgB,EAAU,SAA2B,EAAU,YAAiC,EAAU,MAAc;QAAxH,SAAI,GAAJ,IAAI,CAAY;QAAU,cAAS,GAAT,SAAS,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;QATpI,cAAS,GAAG,eAAe,CAAC;QAC5B,WAAM,GAAG,YAAY,CAAC;QACtB,aAAQ,GAAG,uBAAuB,CAAC;QACnC,UAAK,GAAG,YAAY,CAAC;QACrB,SAAI,GAAG,WAAW,CAAC;QACnB,iBAAY,GAAG,iBAAiB,CAAC;QACjC,aAAQ,GAAG,YAAY,CAAC;IAGgH,CAAC;IACjJ,sCAAQ,GAAR,UAAS,MAAc;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,yBAAW,CAAC,MAAM,SAAI,IAAI,CAAC,SAAW,EAAE,MAAM,CAAC,CAAC,IAAI,CAC5E,sBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IAEJ,CAAC;IAEO,yCAAW,GAAnB,UAAoB,KAAwB;QAC5C,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;YACxB,kEAAkE;YACtE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;YACd,OAAO,iBAAU,CAAC,cAAM,OAAA,CAAC;gBAC7B,KAAK,EAAC,KAAK;aACL,CAAC,EAFqB,CAErB,CAAC,CAAC;SACN;aACI;YACH,sDAAsD;YACtD,6DAA6D;YAChE,OAAO,iBAAU,CAAC,cAAI,OAAA,IAAI,KAAK,CAAE,KAAK,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;SAC7C;QACD,yDAAyD;QACzD,OAAO,iBAAU,CAAC,cAAM,OAAA,IAAI,KAAK,CAAC,iDAAiD,EAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAA/E,CAA+E,CAAC,CAAC;IAC3G,CAAC;IAIC,mCAAK,GAAL,UAAM,KAAY;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,yBAAW,CAAC,MAAM,SAAI,IAAI,CAAC,MAAQ,EAAE,KAAK,CAAC,CAAC,IAAI,CACvE,sBAAU,CAAC,UAAC,KAAwB;YAClC,OAAO,iBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAID,6CAAe,GAAf,UAAgB,eAAkC;QAChD,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACpD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,kBAAW,CAAC;gBACvB,eAAe,EAAE,YAAU,KAAO;gBAClC,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAGF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,yBAAW,CAAC,MAAM,SAAI,IAAI,CAAC,QAAU,EAAE,eAAe,EAAE,WAAW,CAAC,CAAC;IAChG,CAAC;IAGD,yCAAW,GAAX,UAAY,QAAkB;QAC5B,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACpD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,kBAAW,CAAC;gBACvB,eAAe,EAAE,YAAU,KAAO;aACnC,CAAC;SACH,CAAC;QACF,mBAAmB;QACnB,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/B,2CAA2C;QAC3C,IAAI,QAAQ,CAAC,QAAQ;YACnB,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAI,yBAAW,CAAC,MAAM,SAAI,IAAI,CAAC,KAAO,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;IACvF,CAAC;IAID,qCAAO,GAAP;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACpD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,kBAAW,CAAC;gBACvB,eAAe,EAAE,YAAU,KAAO;gBAClC,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,yBAAW,CAAC,MAAM,SAAI,IAAI,CAAC,IAAM,EAAE,WAAW,CAClD,CAAC;IACJ,CAAC;IAED,wCAAU,GAAV,UAAW,MAAc;QACvB,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACpD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,kBAAW,CAAC;gBACvB,eAAe,EAAE,YAAU,KAAO;aACnC,CAAC;SACH,CAAC;QACF,mBAAmB;QAEnB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAI,yBAAW,CAAC,MAAM,SAAI,IAAI,CAAC,YAAc,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IAC5F,CAAC;IAEA,sCAAQ,GAAR;QACC,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACpD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,kBAAW,CAAC;gBACvB,eAAe,EAAE,YAAU,KAAO;gBAClC,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,yBAAW,CAAC,MAAM,SAAI,IAAI,CAAC,QAAU,EAAE,WAAW,CACtD,CAAC;IACJ,CAAC;IAnHU,mBAAmB;QAH/B,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,mBAAmB,CAoH/B;IAAD,0BAAC;CApHD,AAoHC,IAAA;AApHY,kDAAmB","file":"auth-services.service.js","sourcesContent":["import { HttpClient, HttpHeaders,HttpErrorResponse  } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\n\nimport { Person } from '../modules/person/person.module';\nimport { Login } from '../modules/login.module';\nimport { CompleteMyProfile } from '../modules/CompleteProfile.module';\nimport { AddImage } from '../modules/AddImge.module';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServicesService {\n  private registerr = \"Auth/register\";\n  private loginn = \"Auth/login\";\n  private Complete = \"Auth/complete-profile\";\n  private Image = \"Auth/Image\";\n  private user = \"Auth/User\";\n  private UpdatePerson = \"Auth/UpdateUser\";\n  private getImage = \"Auth/Image\";\n\n\n  constructor(private http: HttpClient, private jwtHelper: JwtHelperService, private localStorage: LocalStorageService, private router: Router) { }\n  register(person: Person): Observable<any> {\n     return this.http.post(`${environment.apiUrl}/${this.registerr}`, person).pipe(\n      catchError(this.handleError)\n    );\n\n  }\n\n  private handleError(error: HttpErrorResponse) {\n  if (error.status === 400) {\n    // A client-side or network error occurred. Handle it accordingly.\nconsole.log(error)\n    return throwError(() => ({\nerror:error\n     }));\n  }\n  else {\n    // The backend returned an unsuccessful response code.\n    // The response body may contain clues as to what went wrong.\n return throwError(()=>new Error( error.error));\n  }\n  // Return an observable with a user-facing error message.\n  return throwError(() => new Error('Something bad happened; please try again later.',error.error.errors));\n}\n\n  \n  \n  login(login: Login): Observable<any> {\n    return this.http.post(`${environment.apiUrl}/${this.loginn}`, login).pipe(\n      catchError((error: HttpErrorResponse) => {\n        return throwError(error.error);\n      })\n    );\n  }\n  \n  \n    \n  CompleteProfile(completeprofile: CompleteMyProfile): Observable<any> {\n    const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n   \n        \n    return this.http.post(`${environment.apiUrl}/${this.Complete}`, completeprofile, httpOptions);\n  }\n\n      \n  UpdateImage(addImage: AddImage): Observable<any> {\n    const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n      })\n    };\n    // Create form data\n    const formData = new FormData();\n    console.log(addImage.imageUrl);\n    // Store form name as \"file\" with file data\n    if (addImage.imageUrl)\n      formData.append(\"image\", addImage.imageUrl, addImage.imageUrl.name);\n    return this.http.patch(`${environment.apiUrl}/${this.Image}`, formData, httpOptions);\n  }\n\n  \n\n  GetUser() {\n    const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.get(\n      `${environment.apiUrl}/${this.user}`, httpOptions\n    );\n  }\n  \n  UpdateUser(person: Person): Observable<any> {\n    const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n      })\n    };\n    // Create form data\n    \n    return this.http.patch(`${environment.apiUrl}/${this.UpdatePerson}`, person, httpOptions);\n  }\n\n   GetImage() {\n    const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.get(\n      `${environment.apiUrl}/${this.getImage}`, httpOptions\n    );\n  }\n}"]}