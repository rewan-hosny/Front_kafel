{"version":3,"sources":["project-services.service.ts"],"names":["core_1","require","environment_1","http_1","ProjectServicesService","http","jwtHelper","localStorage","router","this","GetAllProject","OneProject","CreateProject","prototype","getAllProject","token","getItem","httpOptions","headers","HttpHeaders","Authorization","get","environment","apiUrl","GetOneProject","id","Content-Type","AddProject","project","post","__decorate","Injectable","providedIn","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAGAC,cAAAD,QAAA,gCAEAE,OAAAF,QAAA,wBAUAG,uBAAA,WAKC,SAAAA,EAAoBC,EAA0BC,EAAqCC,EAA2CC,GAA1GC,KAAAJ,KAAAA,EAA0BI,KAAAH,UAAAA,EAAqCG,KAAAF,aAAAA,EAA2CE,KAAAD,OAAAA,EAJrHC,KAAAC,cAAgB,wBAChBD,KAAAE,WAAa,wBACbF,KAAAG,cAAgB,UA4C1B,OAxCGR,EAAAS,UAAAC,cAAA,WACD,IAAMC,EAAQR,aAAaS,QAAQ,iBAC7BC,EAAc,CAClBC,QAAS,IAAIf,OAAAgB,YAAY,CACvBC,cAAiB,UAAUL,KAI/B,OAAON,KAAKJ,KAAKgB,IAAOnB,cAAAoB,YAAYC,OAAM,IAAId,KAAKC,cAAiBO,IAIpEb,EAAAS,UAAAW,cAAA,SAAcC,GACN,IAAMV,EAAQR,aAAaS,QAAQ,iBACnCC,EAAc,CAClBC,QAAS,IAAIf,OAAAgB,YAAY,CACvBC,cAAiB,UAAUL,EAC3BW,eAAgB,sBAGpB,OAAOjB,KAAKJ,KAAKgB,IACbnB,cAAAoB,YAAYC,OAAM,IAAId,KAAKE,WAAU,IAAIc,EAAKR,IAKlDb,EAAAS,UAAAc,WAAA,SAAWC,GACP,IAAMb,EAAQR,aAAaS,QAAQ,iBACjCC,EAAc,CAClBC,QAAS,IAAIf,OAAAgB,YAAY,CACvBC,cAAiB,UAAUL,EAC3BW,eAAgB,sBAGpB,OAAOjB,KAAKJ,KAAKwB,KAAQ3B,cAAAoB,YAAYC,OAAM,IAAId,KAAKG,cAAiBgB,EAAQX,IAzCpEb,EAAsB0B,WAAA,CAJlC9B,OAAA+B,WAAW,CACVC,WAAY,UAGD5B,GAAb,GAAa6B,QAAA7B,uBAAAA","file":"project-services.service.min.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Project } from '../modules/Project.module';\nimport { AllCategories } from '../modules/Category.module';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProjectServicesService {\n  private GetAllProject = \"Project/GetAllProject\";\n  private OneProject = \"Project/GetOneProject\";\n  private CreateProject = \"Project\";\n\n constructor(private http: HttpClient, private jwtHelper: JwtHelperService, private localStorage: LocalStorageService, private router: Router) { }\n\n   getAllProject() {\n  const token = localStorage.getItem('Authorization');\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    })\n  };\n   \n  return this.http.get(`${environment.apiUrl}/${this.GetAllProject}`, httpOptions);\n   }\n  \n  \n  GetOneProject(id: number) {\n          const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.get(\n     `${environment.apiUrl}/${this.OneProject}/${id}`,httpOptions\n    );\n  }\n  \n\n    AddProject(project: Project): Observable<any> {\n        const token = localStorage.getItem('Authorization');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(`${environment.apiUrl}/${this.CreateProject}`, project,httpOptions);\n  }\n\n\n  \n  \n}\n"]}