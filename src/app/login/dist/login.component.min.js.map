{"version":3,"sources":["login.component.ts"],"names":["core_1","require","login_module_1","LoginComponent","authService","router","jwtHelper","this","newItem","Login","prototype","login","_this","subscribe","response","console","log","localStorage","setItem","token","decodedToken","decodeToken","navigate","error","errors","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAUAC,eAAAD,QAAA,2BAUAE,eAAA,WAII,SAAAA,EAAoBC,EAA0CC,EAAwBC,GAAlEC,KAAAH,YAAAA,EAA0CG,KAAAF,OAAAA,EAAwBE,KAAAD,UAAAA,EAFxFC,KAAAC,QAAiB,IAAIN,eAAAO,MAgCvB,OA5BEN,EAAAO,UAAAC,MAAA,WAAA,IAAAC,EAAAL,KACAA,KAAKH,YAAYO,MAAMJ,KAAKC,SAASK,UACnC,SAACC,GAECC,QAAQC,IAAIF,GAGZG,aAAaC,QAAQ,gBAAiBJ,EAASK,OAG/C,IAAMC,EAAeR,EAAKN,UAAUe,YAAYP,EAASK,OAGzDF,aAAaC,QAAQ,OAAQE,EAAa,+DAC1CH,aAAaC,QAAQ,SAAUE,EAAa,yEAG5CR,EAAKP,OAAOiB,SAAS,CAAC,WAExB,SAACC,GACCR,QAAQC,IAAIO,GACZR,QAAQC,IAAIO,EAAMA,MAAMC,WA3BjBrB,EAAcsB,WAAA,CAL1BzB,OAAA0B,UAAU,CACTC,SAAU,YACVC,YAAa,yBACbC,UAAW,CAAC,4BAED1B,GAAb,GAAa2B,QAAA3B,eAAAA","file":"login.component.min.js","sourcesContent":["import { Component } from '@angular/core';\n\nimport { Person } from '../modules/person/person.module';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { Login } from '../modules/login.module';\nimport { AuthServicesService } from '../services/auth-services.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  newItem: Login = new Login();\n  \n    constructor(private authService: AuthServicesService, private router: Router, private jwtHelper: JwtHelperService,) { }\n\n  login(): void {\n  this.authService.login(this.newItem).subscribe(\n    (response: any) => {\n      // Handle the successful response here\n      console.log(response);\n\n      // Store the JWT token in local storage (as a string)\n      localStorage.setItem('Authorization', response.token);\n\n      // Decode the JWT token to get user information\n      const decodedToken = this.jwtHelper.decodeToken(response.token);\n\n      // Store user information in local storage\n      localStorage.setItem('name', decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"]);\n      localStorage.setItem('userid', decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"]);\n\n      // Redirect to the home page\n      this.router.navigate(['/home']);\n    },\n    (error: any) => {\n      console.log(error);\n      console.log(error.error.errors); // Log the specific error messages, if available\n      // Handle the error as needed\n    }\n  );\n}\n\n\n}\n"]}