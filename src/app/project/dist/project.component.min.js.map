{"version":3,"sources":["project.component.ts"],"names":["core_1","require","ProjectComponent","http","router","projectService","this","filteredProjects","categoriesProjects","selectedCategoryId","selectedStatus","projects","prototype","viewProjectDetails","id","navigate","ngOnInit","AllProject","filterProjectsAndCategory","filter","project","statues","categoryId","selectCategory","selectStatus","status","_this","getAllProject","subscribe","result","error","console","log","getSafeImageUrl","base64String","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAWAC,iBAAA,WAWI,SAAAA,EAAoBC,EAA2BC,EAAwBC,GAAnDC,KAAAH,KAAAA,EAA2BG,KAAAF,OAAAA,EAAwBE,KAAAD,eAAAA,EATzEC,KAAAC,iBAA0B,GAC1BD,KAAAE,mBAA4B,GAC3BF,KAAAG,mBAAoC,KACrCH,KAAAI,eAAgC,KAKhCJ,KAAAK,SAAsB,GA2DxB,OA9DET,EAAAU,UAAAC,mBAAA,SAAmBC,GACjBR,KAAKF,OAAOW,SAAS,CAAC,mBAAoBD,KAK1CZ,EAAAU,UAAAI,SAAA,WACEV,KAAKW,aACLX,KAAKC,iBAAmBD,KAAKK,UAEnCT,EAAAU,UAAAM,0BAAA,WACE,IAAMT,EAAqBH,KAAKG,mBAC1BC,EAAiBJ,KAAKI,eAI1BJ,KAAKC,iBAFoB,OAAvBE,GAAkD,OAAnBC,EAETJ,KAAKK,SACG,OAAvBF,EAEeH,KAAKK,SAASQ,OAAO,SAAAC,GAAW,OAAAA,EAAQC,UAAYX,IAChD,OAAnBA,EAEeJ,KAAKK,SAASQ,OAAO,SAAAC,GAAW,OAAAA,EAAQE,aAAeb,IAGvDH,KAAKK,SAASQ,OAAO,SAAAC,GAAW,OAAAA,EAAQE,aAAeb,GAAsBW,EAAQC,UAAYX,KAI7HR,EAAAU,UAAAW,eAAA,SAAeD,GACbhB,KAAKG,mBAAqBa,EAC1BhB,KAAKY,6BAEPhB,EAAAU,UAAAY,aAAA,SAAaC,GACXnB,KAAKI,eAAiBe,EACtBnB,KAAKY,6BAKJhB,EAAAU,UAAAK,WAAA,WAAA,IAAAS,EAAApB,KACDA,KAAKD,eAAesB,gBAAgBC,UAClC,SAACC,GACCH,EAAKnB,iBAAmBsB,EACxBH,EAAKlB,mBAAqBqB,EAC1BH,EAAKf,SAAWkB,GAElB,SAACC,GACCC,QAAQC,IAAIF,MAKhB5B,EAAAU,UAAAqB,gBAAA,SAAgBC,GAChB,OAAIA,EACK,0BAA4BA,EAG5B,8BAjEEhC,EAAgBiC,WAAA,CAL5BnC,OAAAoC,UAAU,CACTC,SAAU,cACVC,YAAa,2BACbC,UAAW,CAAC,8BAEDrC,GAAb,GAAasC,QAAAtC,iBAAAA","file":"project.component.min.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Project } from '../modules/Project.module';\nimport { ProjectServicesService } from '../services/project-services.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent {\n\n  filteredProjects: any[] = []; \n  categoriesProjects: any[] = [];\n   selectedCategoryId: number | null = null; // Property to store the selected category ID\n  selectedStatus: number | null = null;   \n\n  viewProjectDetails(id: number) {\n    this.router.navigate(['/project-details', id]);\n  }\n  projects: Project[] = [];\n    constructor(private http: HttpClient,  private router: Router, private projectService: ProjectServicesService,) { }\n\n    ngOnInit(): void {\n      this.AllProject();\n      this.filteredProjects = this.projects;\n    }\nfilterProjectsAndCategory(): void {\n  const selectedCategoryId = this.selectedCategoryId;\n  const selectedStatus = this.selectedStatus;\n\n  if (selectedCategoryId === null && selectedStatus === null) {\n    // If both selectedCategoryId and selectedStatus are null, show all projects\n    this.filteredProjects = this.projects;\n  } else if (selectedCategoryId === null) {\n    // If selectedCategoryId is null, filter projects only by selectedStatus\n    this.filteredProjects = this.projects.filter(project => project.statues === selectedStatus);\n  } else if (selectedStatus === null) {\n    // If selectedStatus is null, filter projects only by selectedCategoryId\n    this.filteredProjects = this.projects.filter(project => project.categoryId === selectedCategoryId);\n  } else {\n    // Filter projects based on both selectedCategoryId and selectedStatus\n    this.filteredProjects = this.projects.filter(project => project.categoryId === selectedCategoryId && project.statues === selectedStatus);\n  }\n}\n\nselectCategory(categoryId: number|null): void {\n  this.selectedCategoryId = categoryId;\n  this.filterProjectsAndCategory();\n}\nselectStatus(status: number|null): void {\n  this.selectedStatus = status;\n  this.filterProjectsAndCategory();\n}\n\n  \n\n   AllProject() {\n  this.projectService.getAllProject().subscribe(\n    (result: any) => {\n      this.filteredProjects = result;\n      this.categoriesProjects = result;\n      this.projects = result;\n    },\n    (error: any) => {\n      console.log(error);\n    }\n  );\n   }\n  \n  getSafeImageUrl(base64String: string | undefined): string {\n  if (base64String) {\n    return 'data:image/jpeg;base64,' + base64String;\n  } else {\n   \n    return '/assets/images/profile.png';\n  }\n}\n\n}\n"]}