{"version":3,"sources":["project.component.ts"],"names":[],"mappings":"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","file":"project.component.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Project } from '../modules/Project.module';\nimport { ProjectServicesService } from '../services/project-services.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent {\n\n  filteredProjects: any[] = []; \n  categoriesProjects: any[] = [];\n   selectedCategoryId: number | null = null; // Property to store the selected category ID\n  selectedStatus: number | null = null;   \n\n  viewProjectDetails(id: number) {\n    this.router.navigate(['/project-details', id]);\n  }\n  projects: Project[] = [];\n    constructor(private http: HttpClient,  private router: Router, private projectService: ProjectServicesService,) { }\n\n    ngOnInit(): void {\n      this.AllProject();\n      this.filteredProjects = this.projects;\n    }\nfilterProjectsAndCategory(): void {\n  const selectedCategoryId = this.selectedCategoryId;\n  const selectedStatus = this.selectedStatus;\n\n  if (selectedCategoryId === null && selectedStatus === null) {\n    // If both selectedCategoryId and selectedStatus are null, show all projects\n    this.filteredProjects = this.projects;\n  } else if (selectedCategoryId === null) {\n    // If selectedCategoryId is null, filter projects only by selectedStatus\n    this.filteredProjects = this.projects.filter(project => project.statues === selectedStatus);\n  } else if (selectedStatus === null) {\n    // If selectedStatus is null, filter projects only by selectedCategoryId\n    this.filteredProjects = this.projects.filter(project => project.categoryId === selectedCategoryId);\n  } else {\n    // Filter projects based on both selectedCategoryId and selectedStatus\n    this.filteredProjects = this.projects.filter(project => project.categoryId === selectedCategoryId && project.statues === selectedStatus);\n  }\n}\n\nselectCategory(categoryId: number|null): void {\n  this.selectedCategoryId = categoryId;\n  this.filterProjectsAndCategory();\n}\nselectStatus(status: number|null): void {\n  this.selectedStatus = status;\n  this.filterProjectsAndCategory();\n}\n\n  \n\n   AllProject() {\n  this.projectService.getAllProject().subscribe(\n    (result: any) => {\n      this.filteredProjects = result;\n      this.categoriesProjects = result;\n      this.projects = result;\n    },\n    (error: any) => {\n      console.log(error);\n    }\n  );\n   }\n  \n  getSafeImageUrl(base64String: string | undefined): string {\n  if (base64String) {\n    return 'data:image/jpeg;base64,' + base64String;\n  } else {\n   \n    return '/assets/images/profile.png';\n  }\n}\n\n}\n"]}